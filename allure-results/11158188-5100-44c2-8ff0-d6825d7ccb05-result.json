{"name": "test_validate_click_fours_button_click_me", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoAlertPresentException: Message: no such alert\n  (Session info: chrome=116.0.5845.141)\nStacktrace:\n\tGetHandleVerifier [0x00007FF69E0C52A2+57122]\n\t(No symbol) [0x00007FF69E03EA92]\n\t(No symbol) [0x00007FF69DF0E25D]\n\t(No symbol) [0x00007FF69DF04169]\n\t(No symbol) [0x00007FF69DF26BFF]\n\t(No symbol) [0x00007FF69DF6705D]\n\t(No symbol) [0x00007FF69DF26AB8]\n\t(No symbol) [0x00007FF69DF66DB3]\n\t(No symbol) [0x00007FF69DF3D2B1]\n\t(No symbol) [0x00007FF69DF3E494]\n\tGetHandleVerifier [0x00007FF69E36EF82+2849794]\n\tGetHandleVerifier [0x00007FF69E3C1D24+3189156]\n\tGetHandleVerifier [0x00007FF69E3BACAF+3160367]\n\tGetHandleVerifier [0x00007FF69E156D06+653702]\n\t(No symbol) [0x00007FF69E04A208]\n\t(No symbol) [0x00007FF69E0462C4]\n\t(No symbol) [0x00007FF69E0463F6]\n\t(No symbol) [0x00007FF69E0367A3]\n\tBaseThreadInitThunk [0x00007FFB51EF7614+20]\n\tRtlUserThreadStart [0x00007FFB53C026B1+33]", "trace": "driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"4c49922ddbbce8a6c4d5481a381edca1\")>\n\n    @allure.feature('Testing the page alert')\n    @allure.story('Testing the fours alert element')\n    def test_validate_click_fours_button_click_me(driver):\n        page_alert = PageAlert(driver, \"https://demoqa.com/alerts\")\n        with allure.step('Page loading  https://demoqa.com/alerts'):\n            page_alert.open_browser()\n        try:\n            with allure.step('Checking whether the expected result matches the actual.'):\n>               assert page_alert.click_fours_button_click_me() == 'You entered Hello'\n\ntests\\test_page_alert.py:62: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nsrc\\pages\\page_alert.py:36: in click_fours_button_click_me\n    self.driver.switch_to.alert.send_keys('Hello')\nvenv\\Lib\\site-packages\\selenium\\webdriver\\remote\\switch_to.py:58: in alert\n    _ = alert.text\nvenv\\Lib\\site-packages\\selenium\\webdriver\\common\\alert.py:59: in text\n    return self.driver.execute(Command.W3C_GET_ALERT_TEXT)[\"value\"]\nvenv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:345: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x000002006451F990>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such alert\",\"message\":\"no such alert\\\\n  (Session info: chrome=116.0.5...07FF69E0367A3]\\\\n\\\\tBaseThreadInitThunk [0x00007FFB51EF7614+20]\\\\n\\\\tRtlUserThreadStart [0x00007FFB53C026B1+33]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoAlertPresentException: Message: no such alert\nE         (Session info: chrome=116.0.5845.141)\nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF69E0C52A2+57122]\nE       \t(No symbol) [0x00007FF69E03EA92]\nE       \t(No symbol) [0x00007FF69DF0E25D]\nE       \t(No symbol) [0x00007FF69DF04169]\nE       \t(No symbol) [0x00007FF69DF26BFF]\nE       \t(No symbol) [0x00007FF69DF6705D]\nE       \t(No symbol) [0x00007FF69DF26AB8]\nE       \t(No symbol) [0x00007FF69DF66DB3]\nE       \t(No symbol) [0x00007FF69DF3D2B1]\nE       \t(No symbol) [0x00007FF69DF3E494]\nE       \tGetHandleVerifier [0x00007FF69E36EF82+2849794]\nE       \tGetHandleVerifier [0x00007FF69E3C1D24+3189156]\nE       \tGetHandleVerifier [0x00007FF69E3BACAF+3160367]\nE       \tGetHandleVerifier [0x00007FF69E156D06+653702]\nE       \t(No symbol) [0x00007FF69E04A208]\nE       \t(No symbol) [0x00007FF69E0462C4]\nE       \t(No symbol) [0x00007FF69E0463F6]\nE       \t(No symbol) [0x00007FF69E0367A3]\nE       \tBaseThreadInitThunk [0x00007FFB51EF7614+20]\nE       \tRtlUserThreadStart [0x00007FFB53C026B1+33]\n\nvenv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:229: NoAlertPresentException"}, "steps": [{"name": "Page loading  https://demoqa.com/alerts", "status": "passed", "start": 1693994466938, "stop": 1693994471416}, {"name": "Checking whether the expected result matches the actual.", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoAlertPresentException: Message: no such alert\n  (Session info: chrome=116.0.5845.141)\nStacktrace:\n\tGetHandleVerifier [0x00007FF69E0C52A2+57122]\n\t(No symbol) [0x00007FF69E03EA92]\n\t(No symbol) [0x00007FF69DF0E25D]\n\t(No symbol) [0x00007FF69DF04169]\n\t(No symbol) [0x00007FF69DF26BFF]\n\t(No symbol) [0x00007FF69DF6705D]\n\t(No symbol) [0x00007FF69DF26AB8]\n\t(No symbol) [0x00007FF69DF66DB3]\n\t(No symbol) [0x00007FF69DF3D2B1]\n\t(No symbol) [0x00007FF69DF3E494]\n\tGetHandleVerifier [0x00007FF69E36EF82+2849794]\n\tGetHandleVerifier [0x00007FF69E3C1D24+3189156]\n\tGetHandleVerifier [0x00007FF69E3BACAF+3160367]\n\tGetHandleVerifier [0x00007FF69E156D06+653702]\n\t(No symbol) [0x00007FF69E04A208]\n\t(No symbol) [0x00007FF69E0462C4]\n\t(No symbol) [0x00007FF69E0463F6]\n\t(No symbol) [0x00007FF69E0367A3]\n\tBaseThreadInitThunk [0x00007FFB51EF7614+20]\n\tRtlUserThreadStart [0x00007FFB53C026B1+33]\n\n", "trace": "  File \"D:\\python_selenium_tests\\tests\\test_page_alert.py\", line 62, in test_validate_click_fours_button_click_me\n    assert page_alert.click_fours_button_click_me() == 'You entered Hello'\n  File \"D:\\python_selenium_tests\\src\\pages\\page_alert.py\", line 36, in click_fours_button_click_me\n    self.driver.switch_to.alert.send_keys('Hello')\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\python_selenium_tests\\venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\switch_to.py\", line 58, in alert\n    _ = alert.text\n        ^^^^^^^^^^\n  File \"D:\\python_selenium_tests\\venv\\Lib\\site-packages\\selenium\\webdriver\\common\\alert.py\", line 59, in text\n    return self.driver.execute(Command.W3C_GET_ALERT_TEXT)[\"value\"]\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\python_selenium_tests\\venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 345, in execute\n    self.error_handler.check_response(response)\n  File \"D:\\python_selenium_tests\\venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "start": 1693994471416, "stop": 1693994471650}], "start": 1693994466938, "stop": 1693994471656, "uuid": "f95f93da-890c-427e-ac47-5403badc259e", "historyId": "caa05d1ade03c8ad27a6ac9ef639c564", "testCaseId": "caa05d1ade03c8ad27a6ac9ef639c564", "fullName": "tests.test_page_alert#test_validate_click_fours_button_click_me", "labels": [{"name": "feature", "value": "Testing the page alert"}, {"name": "story", "value": "Testing the fours alert element"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_page_alert"}, {"name": "host", "value": "DESKTOP-M79PKVE"}, {"name": "thread", "value": "42860-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_page_alert"}]}